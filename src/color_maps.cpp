#include "color_maps.hpp"

#include <iostream>

using namespace glm;

// Credit to https://www.shadertoy.com/view/Nd3fR2 for the MPL color maps
std::map<std::string, std::vector<vec3>> cmaps = {
    {"Viridis", {
        vec3(0.274344,0.004462,0.331359),
        vec3(0.108915,1.397291,1.388110),
        vec3(-0.319631,0.243490,0.156419),
        vec3(-4.629188,-5.882803,-19.646115),
        vec3(6.181719,14.388598,57.442181),
        vec3(4.876952,-13.955112,-66.125783),
        vec3(-5.513165,4.709245,26.582180),
    }},
    {"Blues_r", {
        vec3(0.042660,0.186181,0.409512),
        vec3(-0.703712,1.094974,2.049478),
        vec3(7.995725,-0.686110,-4.998203),
        vec3(-24.421963,2.680736,7.532937),
        vec3(47.519089,-4.615112,-5.126531),
        vec3(-46.038418,2.606781,0.685560),
        vec3(16.586546,-0.279280,0.447047),
    }},
    {"Inferno", {
        vec3(0.000129,0.001094,-0.041044),
        vec3(0.083266,0.574933,4.155398),
        vec3(11.783686,-4.013093,-16.439814),
        vec3(-42.246539,17.689298,45.210269),
        vec3(78.087062,-33.838649,-83.264061),
        vec3(-72.108852,32.950143,74.479447),
        vec3(25.378501,-12.368929,-23.407604),
    }},
    {"Magma", {
        vec3(-0.002292,-0.001348,-0.011890),
        vec3(0.234451,0.702427,2.497211),
        vec3(8.459706,-3.649448,0.385699),
        vec3(-28.029205,14.441378,-13.820938),
        vec3(52.814176,-28.301374,13.021646),
        vec3(-51.349945,29.406659,4.305315),
        vec3(18.877608,-11.626687,-5.627010),
    }},
    {"Twilight", {
        vec3(0.996106,0.851653,0.940566),
        vec3(-6.529620,-0.183448,-3.940750),
        vec3(40.899579,-7.894242,38.569228),
        vec3(-155.212979,4.404793,-167.925730),
        vec3(296.687222,24.084913,315.087856),
        vec3(-261.270519,-29.995422,-266.972991),
        vec3(85.335349,9.602600,85.227117),
    }}
};

/**
 * Sets the 6th order polynomial coefficients for a color map as uniforms to the specified shader 
 * 
 * @param shader The shader to send the uniforms to
 * @param cmap_str The name of the color map to use
 */
void apply_cmap(AbstractShader shader, std::string cmap_str) {
    for (int i = 0; i < 7; i++) {
        shader.set_vec3("c" + std::to_string(i), cmaps.at(cmap_str)[i]);
    }
}